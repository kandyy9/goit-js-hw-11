import{S as c,i as a}from"./assets/vendor-8c59ed88.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const l of r.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&o(l)}).observe(document,{childList:!0,subtree:!0});function s(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(e){if(e.ep)return;e.ep=!0;const r=s(e);fetch(e.href,r)}})();const f="44834659-67420821c74452072565be409",u=i=>{const t=encodeURIComponent(i),s=`https://pixabay.com/api/?key=${f}&q=${t}&image_type=photo&orientation=horizontal&safesearch=true&per_page=40`;return fetch(s,{method:"GET"}).then(e=>{if(!e.ok)throw new Error(e.status);return e.json()})},p=(i,t)=>{t.innerHTML="";const s=i.map(o=>`<li class="gallery-item">
            <a class="gallery-link" href="${o.largeImageURL}">
                <img class="gallery-image" src="${o.webformatURL}" alt="${o.tags}"/>
            </a>
            <ul class="info-summary">
                <li class="info-item"><h3 class="info-title">Likes</h3><p class="info-statistics">${o.likes}</p></li>
                <li class="info-item"><h3 class="info-title">Views</h3><p class="info-statistics">${o.views}</p></li>
                <li class="info-item"><h3 class="info-title">Comments</h3><p class="info-statistics">${o.comments}</p></li>
                <li class="info-item"><h3 class="info-title">Downloads</h3><p class="info-statistics">${o.downloads}</p></li>
            </ul>
        </li>`).join("");t.insertAdjacentHTML("beforeend",s)},m=document.querySelector(".form"),d=document.querySelector(".gallery"),n=document.querySelector(".loader"),y=new c(".gallery-item a",{captions:!0,captionsData:"alt",captionDelay:250});m.addEventListener("submit",i=>{i.preventDefault(),n.style.display="block";const t=i.target.elements.search.value.trim();if(t.length<=0)return n.style.display="none",a.error({title:"Error",message:"Search value is empty",position:"topRight"});u(t).then(s=>{if(n.style.display="none",s.hits.length===0)throw new Error("No images found");p(s.hits,d),y.refresh()}).catch(s=>{n.style.display="none",console.error(s),a.error({title:"Error",message:`Sorry, there are no images matching your search query. Please try again! Error: ${s.message}`,position:"topRight"})})});
//# sourceMappingURL=commonHelpers.js.map
