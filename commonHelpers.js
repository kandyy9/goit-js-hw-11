import{S as f,i as u}from"./assets/vendor-8c59ed88.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const i of e)if(i.type==="childList")for(const l of i.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&o(l)}).observe(document,{childList:!0,subtree:!0});function r(e){const i={};return e.integrity&&(i.integrity=e.integrity),e.referrerPolicy&&(i.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?i.credentials="include":e.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(e){if(e.ep)return;e.ep=!0;const i=r(e);fetch(e.href,i)}})();const m="44834659-67420821c74452072565be409",p=t=>{const s=encodeURIComponent(t),r=`https://pixabay.com/api/?key=${m}&q=${s}&image_type=photo&orientation=horizontal&safesearch=true&per_page=40`;return fetch(r,{method:"GET"}).then(e=>{if(!e.ok)throw new Error(e.status);return e.json()})},h=(t,s)=>{s.innerHTML="";const r=t.map(o=>`<li class="gallery-item">
            <a class="gallery-link" href="${o.largeImageURL}">
                <img class="gallery-image" src="${o.webformatURL}" alt="${o.tags}"/>
            </a>
            <ul class="info-summary">
                <li class="info-item"><h3 class="info-title">Likes</h3><p class="info-statistics">${o.likes}</p></li>
                <li class="info-item"><h3 class="info-title">Views</h3><p class="info-statistics">${o.views}</p></li>
                <li class="info-item"><h3 class="info-title">Comments</h3><p class="info-statistics">${o.comments}</p></li>
                <li class="info-item"><h3 class="info-title">Downloads</h3><p class="info-statistics">${o.downloads}</p></li>
            </ul>
        </li>`).join("");s.insertAdjacentHTML("beforeend",r)},d=document.querySelector(".form"),a=document.querySelector(".gallery"),n=document.querySelector(".loader"),y=new f(".gallery-item a",{captions:!0,captionsData:"alt",captionDelay:250}),c=t=>{t.target.elements.search.value=""};d.addEventListener("submit",t=>{t.preventDefault(),n.style.display="block";const s=t.target.elements.search.value.trim();if(s.length<=0)return n.style.display="none",a.innerHTML="",c(t),u.error({title:"Error",message:"Search value is empty",position:"topRight"});p(s).then(r=>{if(n.style.display="none",r.hits.length===0)throw t.target.elements.search.value="",new Error("No images found");h(r.hits,a),c(t),y.refresh()}).catch(r=>{n.style.display="none",console.error(r),u.error({title:"Error",message:`Sorry, there are no images matching your search query. Please try again! Error: ${r.message}`,position:"topRight"}),c(t),a.innerHTML=""})});
//# sourceMappingURL=commonHelpers.js.map
